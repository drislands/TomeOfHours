CREATE TABLE IF NOT EXISTS "Aspects" (
	"AspectID"	INTEGER NOT NULL UNIQUE,
	"Name"	TEXT NOT NULL UNIQUE,
	"Description"	TEXT,
	"Notes"	TEXT,
	PRIMARY KEY("AspectID" AUTOINCREMENT)
);
CREATE TABLE sqlite_sequence(name,seq);
CREATE TABLE IF NOT EXISTS "Principles" (
	"PrincipleID"	INTEGER NOT NULL UNIQUE,
	"AspectID"	INTEGER NOT NULL UNIQUE,
	"Color"	INTEGER NOT NULL CHECK(Color <= 0xFFFFFF),
	FOREIGN KEY("AspectID") REFERENCES "Aspects"("AspectID"),
	PRIMARY KEY("PrincipleID" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "Cards" (
	"CardID"	INTEGER NOT NULL UNIQUE,
	"Name"	TEXT NOT NULL UNIQUE,
	"Description"	TEXT,
	"Notes"	TEXT,
	PRIMARY KEY("CardID" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "Verbs" (
	"VerbID"	INTEGER NOT NULL UNIQUE,
	"Name"	TEXT NOT NULL UNIQUE,
	"Description"	TEXT,
	"Notes"	TEXT,
	PRIMARY KEY("VerbID" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "SoulElements" (
	"SoulElementID"	INTEGER NOT NULL UNIQUE,
	"CardID"	INTEGER NOT NULL UNIQUE,
	"Color"	INTEGER NOT NULL CHECK("Color" <= 0xFFFFFF),
	FOREIGN KEY("CardID") REFERENCES "Cards"("CardID"),
	PRIMARY KEY("SoulElementID" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "Verb_Slots" (
	"Verb_SlotID"	INTEGER NOT NULL UNIQUE,
	"VerbID"	INTEGER NOT NULL,
	"SlotID"	INTEGER NOT NULL,
	FOREIGN KEY("SlotID") REFERENCES "Slots"("SlotID"),
	FOREIGN KEY("VerbID") REFERENCES "Verbs"("VerbID"),
	PRIMARY KEY("Verb_SlotID" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "Books" (
	"BookID"	INTEGER NOT NULL UNIQUE,
	"CardID"	INTEGER NOT NULL UNIQUE,
	"Reading"	TEXT,
	"Read"	TEXT,
	FOREIGN KEY("CardID") REFERENCES "Cards"("CardID"),
	PRIMARY KEY("BookID" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "Book_Memories" (
	"Book_MemoryID"	INTEGER NOT NULL UNIQUE,
	"BookID"	INTEGER NOT NULL UNIQUE,
	"MemoryID"	INTEGER NOT NULL,
	FOREIGN KEY("MemoryID") REFERENCES "Cards"("CardID"),
	PRIMARY KEY("Book_MemoryID" AUTOINCREMENT),
	FOREIGN KEY("BookID") REFERENCES "Books"("BookID")
);
CREATE TABLE IF NOT EXISTS "Book_Skills" (
	"Book_SkillID"	INTEGER NOT NULL UNIQUE,
	"BookID"	INTEGER NOT NULL UNIQUE,
	"SkillID"	INTEGER NOT NULL,
	"SkillCount"	INTEGER NOT NULL DEFAULT 1 CHECK(SkillCount >= 1),
	FOREIGN KEY("SkillID") REFERENCES "Cards"("CardID"),
	FOREIGN KEY("BookID") REFERENCES "Books"("BookID"),
	PRIMARY KEY("Book_SkillID" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "Slots" (
	"SlotID"	INTEGER NOT NULL UNIQUE,
	"Name"	TEXT NOT NULL,
	"Description"	TEXT,
	"MatchVerbPrinciples"	INTEGER NOT NULL DEFAULT 0 CHECK("MatchVerbPrinciples" IN (0, 1)),
	"Notes"	TEXT,
	PRIMARY KEY("SlotID" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "Verb_Aspects" (
	"Verb_AspectID"	INTEGER NOT NULL UNIQUE,
	"VerbID"	INTEGER NOT NULL,
	"AspectID"	INTEGER NOT NULL,
	"AspectCount"	INTEGER NOT NULL DEFAULT 1 CHECK(AspectCount >= 1),
	FOREIGN KEY("VerbID") REFERENCES "Verbs"("VerbID"),
	FOREIGN KEY("AspectID") REFERENCES "Aspects"("AspectID"),
	PRIMARY KEY("Verb_AspectID" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "Card_Aspects" (
	"Card_AspectID"	INTEGER NOT NULL UNIQUE,
	"CardID"	INTEGER NOT NULL,
	"AspectID"	INTEGER NOT NULL,
	"AspectCount"	INTEGER NOT NULL DEFAULT 1 CHECK("AspectCount" >= 1),
	"AspectType"	TEXT NOT NULL DEFAULT 'OTHER' CHECK("AspectType" IN ('PRIMARY', 'SECONDARY', 'OTHER')),
	PRIMARY KEY("Card_AspectID" AUTOINCREMENT),
	FOREIGN KEY("AspectID") REFERENCES "Aspects"("AspectID"),
	FOREIGN KEY("CardID") REFERENCES "Cards"("CardID")
);
CREATE TABLE IF NOT EXISTS "Slot_Aspects" (
	"Slot_AspectID"	INTEGER NOT NULL UNIQUE,
	"SlotID"	INTEGER NOT NULL,
	"AspectID"	INTEGER NOT NULL,
	"AspectCount"	INTEGER NOT NULL DEFAULT 1 CHECK("AspectCount" >= 1),
	"SlotType"	INTEGER NOT NULL CHECK("SlotType" IN ('ALL', 'ANY', 'NONE')),
	PRIMARY KEY("Slot_AspectID" AUTOINCREMENT),
	FOREIGN KEY("SlotID") REFERENCES "Slots"("SlotID"),
	FOREIGN KEY("AspectID") REFERENCES "Aspects"("AspectID")
);
CREATE TABLE IF NOT EXISTS "Verb_Principles" (
	"Verb_PrincipleID"	INTEGER NOT NULL UNIQUE,
	"VerbID"	INTEGER NOT NULL,
	"PrincipleID"	INTEGER NOT NULL,
	PRIMARY KEY("Verb_PrincipleID" AUTOINCREMENT),
	FOREIGN KEY("VerbID") REFERENCES "Verbs"("VerbID"),
	FOREIGN KEY("PrincipleID") REFERENCES "Principles"("PrincipleID")
);
CREATE TABLE IF NOT EXISTS "SoulElement_Principles" (
	"SoulElement_PrincipleID"	INTEGER NOT NULL UNIQUE,
	"SoulElementID"	INTEGER NOT NULL,
	"PrincipleID"	INTEGER NOT NULL,
	"PrincipleCount"	INTEGER NOT NULL DEFAULT 1 CHECK(PrincipleCount >= 1),
	FOREIGN KEY("SoulElementID") REFERENCES "SoulElements"("SoulElementID"),
	FOREIGN KEY("PrincipleID") REFERENCES "Principles"("PrincipleID"),
	PRIMARY KEY("SoulElement_PrincipleID" AUTOINCREMENT)
);
